# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class G < Formula
    desc "Golang Version Manager"
    homepage "https://github.com/voidint/g"
    license "MIT"
    head "https://github.com/anjia0532/homebrew-tap.git", branch: "main"
    version "1.7.0"
  
    on_macos do
      if Hardware::CPU.arm?
        url "https://github.com/voidint/g/releases/download/v1.7.0/g1.7.0.darwin-arm64.tar.gz"
        sha256 "eab491b9c1874479a84c0bd0af2d241b210755a4f3ee34a3c37c7c880179d327"
  
        def install
          bin.install "g"
        end
      end
      if Hardware::CPU.intel?
        url "https://github.com/voidint/g/releases/download/v1.7.0/g1.7.0.darwin-amd64.tar.gz"
        sha256 "ef244370794377921fa62ef2fe67673c7e5bf73f3ef566095564391eceb0d340"
  
        def install
          bin.install "g"
        end
      end
    end
  
    on_linux do
      if Hardware::CPU.intel?
        url "https://github.com/voidint/g/releases/download/v1.7.0/g1.7.0.linux-amd64.tar.gz"
        sha256 "d0f3837a75b1555a43c9a8489b58837c7ae6fc3413c40843813aee83e791b271"
  
        def install
          bin.install "g"
        end
      end
      if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
        url "https://github.com/voidint/g/releases/download/v1.7.0/g1.7.0.linux-arm.tar.gz"
        sha256 "7292ab6472a920e844565a566f181ccc8fcd5c229fddbddd723fcd7a20e0a13d"
  
        def install
          bin.install "g"
        end
      end
      if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
        url "https://github.com/voidint/g/releases/download/v1.7.0/g1.7.0.linux-arm64.tar.gz"
        sha256 "472357653be8ba5dc67db83d62b2b326f61ec725f16bad42840e8ddf8f878bea"
  
        def install
          bin.install "g"
        end
      end
    end
  
    def caveats
      <<~EOS
        # 建议安装前清空`GOROOT`、`GOBIN`等环境变量
        $ curl -sSL https://raw.githubusercontent.com/voidint/g/master/install.sh | bash
        $ echo "unalias g" >> ~/.bashrc # 可选。若其他程序（如'git'）使用了'g'作为别名。
        $ source ~/.bashrc # 或者 source ~/.zshrc
  
        $ cat >~/.g/env <<'EOF'
        #!/bin/sh
        # g shell setup
        export GOROOT="${HOME}/.g/go"
        export PATH="${HOME}/.g/bin:${GOROOT}/bin:$PATH"
        export G_MIRROR=https://golang.google.cn/dl/
        EOF

        $ echo 'source ~/.g/env' >> ~/.bashrc
        $ echo 'source ~/.g/env' >> ~/.zshrc

        $ g self update # g 自身升级
      EOS
    end
  
    test do
      system bin/"g", "ls-remote"
    end
  end